{
  "name": "sequencing_alignment",
  "schema": {
    "type": "object",
    "required": [
      "workflow",
      "experiment",
      "read_group_count",
      "read_groups"
    ],
    "properties": {
      "workflow": {
        "propertyNames": {
          "enum": [
            "workflow_name",
            "workflow_short_name",
            "workflow_version",
            "genome_build",
            "genome_annotation",
            "run_id",
            "session_id",
            "inputs"
          ]
        },
        "required": [
          "workflow_name",
          "workflow_version",
          "genome_build",
          "run_id",
          "inputs"
        ],
        "allOf": [
          {
            "type": "object",
            "properties": {
              "workflow_name": {
                "type": "string",
                "pattern": "^[a-zA-Z][a-zA-Z0-9 _\\-]+[a-zA-Z0-9]+$"
              },
              "workflow_short_name": {
                "type": "string",
                "pattern": "^[a-zA-Z][a-zA-Z0-9_\\-]+[a-zA-Z0-9]+$"
              },
              "genome_build": {
                "type": "string",
                "enum": [
                  "GRCh38_hla_decoy_ebv",
                  "GRCh38_Verily_v1"
                ]
              },
              "genome_annotation": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "inputs": {
                "type": "array",
                "items": {
                  "type": "object",              
                  "properties": {
                    "input_analysis_id": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    },
                    "tumour_analysis_id": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    },
                    "normal_analysis_id": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    },
                    "analysis_type": {
                      "type": "string",
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_]+$"
                    }
                  }
                },
                "minItems": 1
              },
              "run_id": {
                "type": "string"
              },
              "session_id": {
                "type": "string",
                "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
              },
              "workflow_version": {
                "type": "string"
              }
            }
          },
          {
            "if": {
              "properties": {
                "workflow_name": {
                  "enum": [
                    "RNA Seq Alignment"
                  ]
                }
              }
            },
            "then": {
              "properties": {
                "genome_annotation": {
                  "type": "string",
                  "pattern": "^GENCODE v[0-9]{2,4}$"
                }
              }
            }
          }
        ]
      },
      "experiment": {
        "propertyNames": {
          "enum": [
            "platform",
            "platform_model",
            "sequencing_date",
            "experimental_strategy",
            "sequencing_center",
            "submitter_sequencing_experiment_id",
            "target_capture_kit",
            "library_isolation_protocol",
            "library_preparation_kit",
            "library_strandedness",
            "rin",
            "dv200",
            "spike_ins_included",
            "spike_ins_fasta",
            "spike_ins_concentration"
          ]
        },
        "required": [
          "platform",
          "experimental_strategy"
        ],
        "type": "object",
        "allof": [
          {
            "properties": {
              "submitter_sequencing_experiment_id": {
                "type": ["string", "null"],
                "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9\\-_\\.:']{0,98}[a-zA-Z0-9]{1}$"
              },
              "platform": {
                "enum": [
                  "CAPILLARY",
                  "LS454",
                  "ILLUMINA",
                  "SOLID",
                  "HELICOS",
                  "IONTORRENT",
                  "ONT",
                  "PACBIO",
                  "Nanopore",
                  "BGI"
                ]
              },
              "platform_model": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "sequencing_date": {
                "oneOf": [
                  {
                    "type": "string",
                    "oneOf": [
                      {
                        "format": "date"
                      },
                      {
                        "format": "date-time"
                      }
                    ],
                    "example": [
                      "2019-06-16",
                      "2019-06-16T20:20:39+00:00"
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "experimental_strategy": {
                "enum": [
                  "WGS",
                  "WXS",
                  "RNA-Seq",
                  "Bisulfite-Seq",
                  "ChIP-Seq",
                  "Targeted-Seq"
                ]
              },
              "sequencing_center": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "target_capture_kit": {
                "enum": [
                  "xGen Exome Research Panel V1 (IDT)", 
                  "SeqCap EZ MedExome (Roche)", 
                  "SureSelect Human All Exon V6 (Agilent)", 
                  "Human Core Exome Kit + RefSeq V1 (Twist)",
                  null
                ]  
              },
              "library_isolation_protocol": {
                "enum": [
                  "TRIzol Reagent (Thermo Fisher)",
                  "RNeasy kits (QIAGEN)",
                  "RNase free DNase I (Thermo Fisher)",
                  "Pico Pure RNA isolation kit (Thermo Fisher)",
                  "mirVANA microRNA isolation kit (Thermo Fisher)",
                  "Absolutely Total RNA, miRNA & mRNA Purification Kits (Stratagene, Agilent technologies)",
                  "SV total RNA isolation kit (Promega)",
                  "RNAqueous Kit (Thermo Fisher)",
                  "AllPrep DNA/RNA Micro Kit (QIAGEN)",
                  "GenElute Mammalian Total RNA Miniprep kit (MilliporeSigma)",
                  "Spectrum Plant Total RNA kit (MilliporeSigma)",
                  "peqGOLD Total RNA kits (PeqLab Biotechnologie)",
                  "RNAlater (Thermo Fisher)",
                  null
                ]
              },
              "library_preparation_kit": {
                "enum": [
                  "Ovation SoLo kit (NuGEN)",
                  "SMARTer Stranded Total RNA-Seq Kit (Takara)",
                  "TruSeq RNA sample preparation v2 (Illumina)",
                  "SMART-Seq v4 Ultra Low Input RNA Kit (Takara)",
                  "Nextera XT DNA Library Preparation Kit (Illumina)",
                  "NEXTflex kit (Bioo Scientific)",
                  null
                ] 
              },
              "library_strandedness": {
                "enum": [
                  "UNSTRANDED",
                  "FIRST_READ_SENSE_STRAND",
                  "FIRST_READ_ANTISENSE_STRAND",
                  null
                ]
              },
              "rin": {
                "anyOf": [
                  {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 10
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "dv200": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^(100|\\d{1,2}(\\.\\d+)?)%$",
                    "minLength": 2,
                    "description": "The percentage of RNA fragments that are >200 nucleotides in size.",
                    "examples": [
                      "95%"
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "spike_ins_included": {
                "type": [
                  "boolean",
                  "null"
                ]  
              },
              "spike_ins_fasta": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "spike_ins_concentration": {
                "type": [
                  "string",
                  "null"
                ]  
              }
            }
          },
          {
            "if": {
              "properties": {
                "experimental_strategy": {
                  "const": "RNA-Seq"
                }
              }
            },
            "then": {
              "properties": {
                "library_strandedness": {
                  "enum": [
                    "UNSTRANDED",
                    "FIRST_READ_SENSE_STRAND",
                    "FIRST_READ_ANTISENSE_STRAND"
                  ]
                }
              }
            }
          }
        ]
      },
      "read_group_count": {
        "type": "integer",
        "minimum": 1
      },
      "read_groups": {
        "type": "array",
        "items": {
          "type": "object",
          "propertyNames": {
            "enum": [
              "library_name",
              "platform_unit",
              "is_paired_end",
              "read_length_r1",
              "file_r1",
              "insert_size",
              "read_length_r2",
              "file_r2",
              "sample_barcode",
              "read_group_id_in_bam",
              "submitter_read_group_id"
            ]
          },
          "required": [
            "library_name",
            "platform_unit",
            "is_paired_end",
            "read_length_r1",
            "file_r1",
            "insert_size",
            "read_length_r2",
            "file_r2",
            "sample_barcode",
            "submitter_read_group_id"
          ],
          "allOf": [
            {
              "properties": {
                "submitter_read_group_id": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9\\-_:\\.]+$"
                },
                "read_group_id_in_bam": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^[a-zA-Z0-9\\-_:\\.']+$"
                },
                "library_name": {
                  "type": "string"
                },
                "platform_unit": {
                  "type": "string"
                },
                "is_paired_end": {
                  "type": "boolean"
                },
                "file_r1": {
                  "type": "string"
                },
                "file_r2": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "read_length_r1": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 20
                },
                "read_length_r2": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 20
                },
                "insert_size": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "sample_barcode": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            {
              "if": {
                "properties": {
                  "is_paired_end": {
                    "const": true
                  }
                }
              },
              "then": {
                "properties": {
                  "file_r2": {
                    "type": "string"
                  },
                  "read_length_r2": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 20
                  },
                  "insert_size": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 0
                  }
                }
              },
              "else": {
                "properties": {
                  "file_r2": {
                    "const": null
                  },
                  "read_length_r2": {
                    "const": null
                  },
                  "insert_size": {
                    "const": null
                  }
                }
              }
            }
          ]
        },
        "minItems": 1
      }
    }
  }
}

$schema: "http://json-schema.org/draft-07/schema#"

$id: "donor"
title: Donor
type: object
description: "Cancer patient participated in an ARGO research program"

definitions:
  version:
    allOf:
    - $ref: '_definitions#/_/properties/version'
    - const: 1
  relationDef:
    $ref: '_definitions#/_/properties/relationDef'
    const:
      primaryKey:
      - '#/definitions/systemProperties/properties/id'
      naturalKey:
      - '#/properties/program_id'
      - '#/properties/submitter_donor_id'
  systemProperties:  # properties will be populated by the system
    propertyNames:
      enum: [ id, schema_version ]
    required: [ id, schema_version ]
    properties:
      schema_version:
        $ref: '#/definitions/version'  # where to pick up the version
      id:  # primary key, defined in 'primaryKey'
        allOf:
        - $ref: _definitions#/common/properties/id
        - pattern: "^DO"  # id must start with "DO", in addition to pattern defined at _definitions#/common/properties/id

propertyNames:  # this will reject any unknown properties, note that 'additionalProperties: false' does not work with allOf
  enum: [ type, submitter_donor_id, program_id, gender ]

required:
- type
- submitter_donor_id
- program_id
- gender

properties:
  type:
    const: "donor"
  submitter_donor_id:
    $ref: _definitions#/common/properties/submitter_id
    description: "Submitter's donor ID"
  program_id:
    $ref: _definitions#/common/properties/program_id
  gender:
    enum: [ "female", "male", "other" ]
    description: "Donor biological sex"

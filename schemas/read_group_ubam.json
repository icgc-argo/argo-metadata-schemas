{
  "name": "read_group_ubam",
  "version": 5,
  "schema": {
    "type": "object",
    "required": [
      "submitter_read_group_id",
      "read_group",
      "workflow",
      "experiment"
    ],
    "properties": {
      "submitter_read_group_id": {
        "type": "string"
      },
      "workflow": {
        "propertyNames": {
          "enum": [
            "name",
            "short_name",
            "version",
            "run_id",
            "inputs"
          ]
        },
        "required": [
          "name",
          "version",
          "run_id",
          "inputs"
        ],
        "allOf": [
          {
            "properties": {
              "name": {
                "pattern": "^[a-zA-Z][a-zA-Z0-9_-]+"
              },
              "inputs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    },
                    "analysis_type": {
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_]+"
                    }
                  }
                },
                "minItems": 1
              },
              "run_id": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "short_name": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          {
            "properties": {
              "name": {
                "const": "dna-seq-alignment"
              },
              "inputs": {
                "type": "array",
                "maxItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "analysis_type": {
                      "const": "sequencing_experiment"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "experiment": {
        "propertyNames": {
          "enum": [
            "platform",
            "platform_model",
            "sequencing_date",
            "library_strategy",
            "sequencing_center",
            "sequencing_experiment_id",
            "submitter_sequencing_experiment_id"
          ]
        },
        "required": [
          "platform",
          "library_strategy",
          "sequencing_experiment_id",
          "submitter_sequencing_experiment_id"
        ],
        "properties": {
          "submitter_sequencing_experiment_id": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9-_.:']{0,98}[a-zA-Z0-9]{1}$"
          },
          "sequencing_experiment_id": {
            "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$"
          },
          "platform": {
            "enum": [
              "CAPILLARY",
              "LS454",
              "ILLUMINA",
              "SOLID",
              "HELICOS",
              "IONTORRENT",
              "ONT",
              "PACBIO",
              "Nanopore",
              "BGI"
            ]
          },
          "platform_model": {
            "type": "string"
          },
          "sequencing_date": {
            "type": "string",
            "oneOf": [
              {
                "format": "date"
              },
              {
                "format": "date-time"
              }
            ],
            "example": [
              "2019-06-16",
              "2019-06-16T20:20:39+00:00"
            ]
          },
          "library_strategy": {
            "enum": [
              "WGS",
              "WXS",
              "RNA-Seq",
              "Bisulfite-Seq",
              "ChIP-Seq"
            ]
          },
          "sequencing_center": {
            "type": "string"
          },
          "read_group_count": {
            "type": "integer",
            "minimum": 1
          }
        }
      },
      "read_group": {
        "propertyNames": {
          "enum": [
            "library_name",
            "platform_unit",
            "is_paired_end",
            "read_length_r1",
            "file_r1",
            "insert_size",
            "read_length_r2",
            "file_r2",
            "sample_barcode"
          ]
        },
        "required": [
          "library_name",
          "platform_unit",
          "is_paired_end",
          "read_length_r1",
          "file_r1",
          "insert_size",
          "read_length_r2",
          "file_r2",
          "sample_barcode"
        ],
        "allOf": [
          {
            "properties": {
              "submitter_read_group_id": {
                "type": "string"
              },
              "library_name": {
                "type": "string"
              },
              "platform_unit": {
                "type": "string"
              },
              "is_paired_end": {
                "type": "boolean"
              },
              "file_r1": {
                "type": "string"
              },
              "file_r2": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "read_length_r1": {
                "type": "integer",
                "minimum": 20
              },
              "read_length_r2": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 20
              },
              "insert_size": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              },
              "sample_barcode": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          {
            "if": {
              "properties": {
                "is_paired_end": {
                  "const": true
                }
              }
            },
            "then": {
              "properties": {
                "file_r2": {
                  "type": "string"
                },
                "read_length_r2": {
                  "type": "integer"
                },
                "insert_size": {
                  "type": "integer"
                }
              }
            },
            "else": {
              "properties": {
                "file_r2": {
                  "const": null
                },
                "read_length_r2": {
                  "const": null
                },
                "insert_size": {
                  "const": null
                }
              }
            }
          }
        ]
      }
    }
  }
}

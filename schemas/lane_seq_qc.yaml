$schema: "http://json-schema.org/draft-07/schema#"

$id: "lane_seq_qc"
title: Unaligned lane level sequencing reads QC report
type: object
description: ""

definitions:
  version:
    allOf:
    - $ref: '_definitions#/_/properties/version'
    - const: 1
  relationDef:
    $ref: '_definitions#/_/properties/relationDef'
    const:
      primaryKey:
      - '#/definitions/systemProperties/properties/id'
      uniqueKey:
      - [ '#/properties/inputs/properties/lane_seq_submission_id' ]   # one lane bam can have only one lane_seq_qc record
      references:
      - foreignKey:
        - '#/properties/inputs/properties/lane_seq_submission_id'
        targetEntity: 'lane_seq_submission'  # lane_seq_qc to lane_seq_submission relationship is one-to-one
        targetKey:  # relationship by primaryKey
        - 'lane_seq_submission#/definitions/systemProperties/properties/id'

  systemProperties:
    propertyNames:
      enum: [ schema_version, status, id, read_group_id, library_strategy, donor ]
    required: [ schema_version, status, id, read_group_id, library_strategy, donor ]
    properties:
      schema_version:
        $ref: '#/definitions/version'  # where to pick up the version
      status:
        $ref: _definitions#/common/properties/bundle_status
      id:
        $ref: _definitions#/common/properties/uuid
      read_group_id:  # FK points to PK of read_group
        $ref: lane_seq_submission#/definitions/systemProperties/properties/read_group_id
      library_strategy:
        $ref: lane_seq_submission#/definitions/systemProperties/properties/library_strategy
      donor:
        $ref: lane_seq_submission#/definitions/systemProperties/properties/donor

propertyNames:
  enum: [ type, program, inputs, analysis, qc_metrics, files ]

required:
- type
- program
- inputs
- analysis
- qc_metrics
- files

properties:
  type:
    const: "lane_seq_qc"
  program:
    $ref: _definitions#/common/properties/program_short_name
  inputs:
    additioinalProperties: false
    required: [ lane_seq_submission_id, files ]
    properties:
      lane_seq_submission_id:  # one lane_seq_submission per lane_seq_qc
        $ref: lane_seq_submission#/definitions/systemProperties/properties/id
      files:
        additioinalProperties: false
        required: [ lane_seq ]
        properties:
          lane_seq:  # input file for this QC tool could be locally prepared from preprocessing steps
            additioinalProperties: false
            required: [ object_uri, bundle_id, object_id, name, repository ]
            properties:
              object_uri:  # if file is local, object_id will be 'null'
                type: string  # pattern: song://<repository>/<bundle_id>/<object_id>
              bundle_id:  # lane_seq_submission
                $ref: "#/properties/inputs/properties/lane_seq_submission_id"  # get value from
              object_id:  # lane_seq object ID in the above lane_seq_submission
                type: string
              name:  # file name
                pattern: '\.bam$'  # pattern to find input file from the bundle
              repository:  # repo where the object resides
                type: string
  analysis:
    additionalProperties: false
    required: [ analysis_type, tool, execution ]
    properties:
      analysis_type:
        allOf:
        - $ref: '_definitions#/analysis/properties/analysis_type'
        - const: 'Data QC'
      tool:  # Tool refers to what's in GA4GH's Tool Registry Service
        propertyNames:
          $ref: '_definitions#/analysis/properties/tool/toolNames/propertyNames'
        allOf:
        - $ref: '_definitions#/analysis/properties/tool'
        - properties:
            contained_apps:
              type: array
              items:
                type: string
              const: [ picard ]
      execution:
        $ref: '_definitions#/analysis/properties/execution'
  qc_metrics:
    type: object
    properties:
      pf_bases:
        description: "pass filter bases"
        type: integer
      pf_reads:
        description: "pass filter reads"
        type: integer
      total_bases:
        description: "total bases"
        type: integer
      total_reads:
        description: "total reads"
        type: integer
  files:  # output files
    type: object
    additionalProperties: false
    properties:
      metrics_file:
        $ref: lane_seq_qc.metrics_file.data_object
        definitions:
          relationDef:
            $ref: '_definitions#/_/properties/relationDef'
            const:
              references:
              - foreignKey:
                - '#/properties/files/properties/metrics_file/definitions/systemProperties/properties/object_id'
                targetEntity: 'data_object'  # lane_seq_qc to lane_seq_submission relationship is one-to-one
                targetKey:  # relationship by primaryKey
                - 'lane_seq_qc.metrics_file.data_object#/definitions/systemProperties/allOf/1/properties/id'

          systemProperties:
            additionalProperties: false
            required: [ type, object_id ]
            properties:
              type:
                const: data_object
              object_id:
                $ref: lane_seq_qc.metrics_file.data_object#/definitions/systemProperties/allOf/1/properties/id

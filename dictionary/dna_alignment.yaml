$schema: "http://dcc.icgc-argo.org/draft-00/schema#"

$id: "dna_alignment"
title: Uniform alignment of DNA sequencing reads
version: 0
category: data_bundle
type: object
description: ""
additionalProperties: false

systemProperties:
  properties:
    status:
      $ref: _definitions#/common/properties/bundle_status
    id:
      $ref: _definitions#/common/properties/uuid
    sample_id:  # to be magically populated by the system through traversing back to the 'sample'
      $ref: sample#/systemProperties/properties/id
    specimen_id:  # to be magically populated by the system through traversing back to the 'specimen'
      $ref: specimen#/systemProperties/properties/id
    specimen_type:  # to be magically populated by the system through traversing back to the 'specimen'
      $ref: specimen#/properties/specimen_type
    normal_or_tumour_designation:  # to be magically populated by the system through traversing back to the 'specimen'
      $ref: specimen#/properties/normal_or_tumour_designation

required:
- type
- program
- lane_bam_submission_id
- analysis
- input_files
- files

primaryKey:
  surrogateKey: [ id ]

uniqueKeys:
- [ lane_bam_submission_id ]  # no lane_bam_submission can appear more than once

references:
- selfKey: [ lane_bam_submission_id ]
  reference:
    targetEntity: lane_bam_submission  # dna_alignment to lane_bam_sumbission is one-to-many relationship
    targetKey: [ id ]

properties:
  type:
    const: "dna_alignment"
  program:
    $ref: _definitions#/common/properties/program_short_name
  lane_bam_submission_id:  # the input bundles, one or more lane_bam_submission
    type: array
    minItems: 1
    items:
      $ref: lane_bam_submission#/systemProperties/properties/id
  analysis:
    type: object
    properties:
      analysis_type:
        const: 'DNA Alignment'
      reference_genome:
        enum: [ GRCh37, GRCh38 ]
        default: GRCh38
      core_tool:
        const: 'BWA MEM'
      tool:  # Tool refers to what's in GA4GH's Tool Registry Service
        type: object
        properties:
          registry:
            type: string  # such as Dockstore
          tool_id:
            type: string
          tool_name:
            type: string
          version:
            type: string
      execution:
        type: object
        properties:
          runner_name:
            type: string
          runner_version:
            type: string
          job_id:
            type: string
          started_at:
            type: string
            format: date-time
          completed_at:
            type: string
            format: date-time
  input_files:  # input files are multiple lane level unaligned bam files
    type: object
    properties:
      lane_bams:  # these are derived from the list of lane_bam_submission_id
        type: array
        minItems: 1  # at least one, must match number of read groups
        items:
          type: object
          properties:
            object_uri:  # if file is local, object_id will be 'null'
              type: string  # pattern: song://<repository>/<bundle_id>/<object_id>
            bundle_id:  # lane_bam_submission
              $ref: "#/properties/lane_bam_submission_id/items"  # get value from there
            object_id:  # lane_bam object ID in the above lane_bam_submission
              type: string
            name:  # file name
              type: string
              pattern: "\.bam$"  # filename pattern to fine the file in the bundle
            repository:  # repo where the object resides
              type: string
      reference_genome:
        type: object
        properties:
          reference:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa"
          reference_fai:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.fai"
          reference_gz:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz"
          reference_gz_fai:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.fai"
          reference_gz_alt:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.alt"
          reference_gz_bwt:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.bwt"
          reference_gz_ann:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.ann"
          reference_gz_pac:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.pac"
          reference_gz_sa:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.sa"
          reference_gz_amb:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.amb"
  files:
    type: object
    properties:
      aligned_seq:
        $id: "#data_object/aligned_seq"
        type: object
        primaryKey:
          surrogateKey: [ id ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            name:
              pattern: "\.(bam|cram)$"  # must have .bam or .cram extension

        systemProperties:
          required: [ id, program, repository, created_at, updated_at, derived_from, bundle_id, bundle_type, format, data_type ]
          allOf:
          - $ref: _definitions#/data_object
          - $ref: _definitions#/repositoryProperties
          - properties:
              id:  # surrogate key
                $ref: _definitions#/data_object/properties/id
              program:  # copied from containing parent
                $ref: "#/properties/program"
              derived_from:
                type: object
                properties:
                  type:
                    const: "sample"
                  id:  # copied from containing parent
                    $ref: "#/systemProperties/properties/sample_id"
              bundle_id:  # copied from containing parent
                $ref: "#/systemProperties/properties/id"
              bundle_type:
                const: "dna_alignment"
              format:
                enum: [ "CRAM", "BAM" ]
              date_type:
                const: "Aligned Reads"
                default: "Aligned Reads"

      aligned_seq_index:
        $id: "#data_object/aligned_seq_index"
        type: object
        primaryKey:
          surrogateKey: [ id ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            name:
              pattern: "\.(bam\.bai|cram\.crai)$"  # must have .bam.bai or .cram.crai extension

        systemProperties:
          required: [ id, program, repository, created_at, updated_at, derived_from, bundle_id, bundle_type, format, data_type ]
          allOf:
          - $ref: _definitions#/data_object
          - $ref: _definitions#/repositoryProperties
          - properties:
              id:  # surrogate key
                $ref: _definitions#/data_object/properties/id
              program:  # copied from containing parent
                $ref: "#/properties/program"
              derived_from:
                type: object
                properties:
                  type:
                    const: "sample"
                  id:  # copied from containing parent
                    $ref: "#/systemProperties/properties/sample_id"
              bundle_id:  # copied from containing parent
                $ref: "#/systemProperties/properties/id"
              bundle_type:
                const: "dna_alignment"
              format:
                enum: [ "CRAI", "BAI" ]
              date_type:
                const: "Aligned Reads Index"
                default: "Aligned Reads Index"

$schema: "http://json-schema.org/draft-07/schema#"

$id: "dna_alignment"
title: Uniform alignment of DNA sequencing reads
type: object
description: ""
additionalProperties: false

definitions:
  relationDef:
    $ref: '_definitions#/relationDef'
    const:
      category: analysis
      version: 0
      primaryKey:
      - '#/definitions/systemProperties/properties/id'
      uniqueKey:
      - [ '#/properties/inputs/properties/lane_bam_submission_id' ]   # one lane bam submission can only appear once in dna_alignment
      references:
      - foreignKey:
        - '#/properties/inputs/properties/lane_bam_submission_id'
        targetEntity: 'lane_bam_submission'  # lane_bam_qc to lane_bam_submission relationship is one-to-one
        targetKey:  # relationship by primaryKey
        - 'lane_bam_submission#/definitions/systemProperties/properties/id'

  systemProperties:
    properties:
      status:
        $ref: _definitions#/common/properties/bundle_status
      id:
        $ref: _definitions#/common/properties/uuid
      donor:  # donor/biospecimen tree
        properties:
          donor_id:
            $ref: donor#/definitions/systemProperties/properties/id
          specimen:
            properties:
              specimen_id:
                $ref: specimen#/definitions/systemProperties/properties/id
              specimen_type:  # to be magically populated by the system through traversing back to the 'specimen'
                $ref: specimen#/properties/specimen_type
              normal_or_tumour_designation:  # to be magically populated by the system through traversing back to the 'specimen'
                $ref: specimen#/properties/normal_or_tumour_designation
              sample:
                properties:
                  sample_id:  # to be magically populated by the system through traversing back to the 'sample'
                    $ref: sample#/definitions/systemProperties/properties/id
      library_strategy:  # to be magically populated by the system through traversing back to the 'sequencing_experiment'
        $ref: sequencing_experiment#/properties/library_strategy

required:
- type
- program
- inputs
- analysis
- input_files
- files

properties:
  type:
    const: "dna_alignment"
  program:
    $ref: _definitions#/common/properties/program_short_name
  inputs:
    properties:
      lane_bam_submission_id:
        type: array
        minItems: 1
        items:  # the input bundles, one or more lane_bam_submission
          $ref: lane_bam_submission#/definitions/systemProperties/properties/id
  analysis:
    type: object
    properties:
      analysis_type:
        const: 'DNA Alignment'
      reference_genome:
        enum: [ GRCh37, GRCh38 ]
        default: GRCh38
      core_tool:
        const: 'BWA MEM'
      tool:  # Tool refers to what's in GA4GH's Tool Registry Service
        type: object
        properties:
          registry:
            type: string  # such as Dockstore
          tool_id:
            type: string
          tool_name:
            type: string
          version:
            type: string
      execution:
        type: object
        properties:
          runner_name:
            type: string
          runner_version:
            type: string
          job_id:
            type: string
          started_at:
            type: string
            format: date-time
          completed_at:
            type: string
            format: date-time
  input_files:  # input files are multiple lane level unaligned bam files
    type: object
    properties:
      lane_bams:  # these are derived from the list of lane_bam_submission_id
        type: array
        minItems: 1  # at least one, must match number of read groups
        items:
          type: object
          properties:
            object_uri:  # if file is local, object_id will be 'null'
              type: string  # pattern: song://<repository>/<bundle_id>/<object_id>
            bundle_id:  # lane_bam_submission
              $ref: "#/properties/inputs/properties/lane_bam_submission_id/items"  # get value from there
            object_id:  # lane_bam object ID in the above lane_bam_submission
              type: string
            name:  # file name
              type: string
              pattern: '\.bam$'  # filename pattern to fine the file in the bundle
            repository:  # repo where the object resides
              type: string
      reference_genome:
        type: object
        properties:
          reference:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa"
          reference_fai:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.fai"
          reference_gz:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz"
          reference_gz_fai:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.fai"
          reference_gz_alt:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.alt"
          reference_gz_bwt:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.bwt"
          reference_gz_ann:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.ann"
          reference_gz_pac:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.pac"
          reference_gz_sa:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.sa"
          reference_gz_amb:
            type: object
            properties:
              object_uri:
                type: string
                default: "https://object.cancercollaboratory.org:9080/swift/v1/genomics-public-data/reference-genome/GRCh38_hla_decoy_ebv/GRCh38_hla_decoy_ebv.fa.gz.amb"
  files:
    type: object
    additionalProperties: false
    properties:
      aligned_seq:
        $ref: dna_alignment.aligned_seq.data_object

      aligned_seq_index:
        $ref: dna_alignment.aligned_seq_index.data_object

$schema: "http://json-schema.org/draft-07/schema#"

$id: "lane_seq_submission"
title: Lane level sequence submission bundle, one read group one lane_seq_submission
type: object
description: ""

definitions:
  version:
    allOf:
    - $ref: '_definitions#/_/properties/version'
    - const: 1
  relationDef:
    $ref: '_definitions#/_/properties/relationDef'
    const:
      primaryKey:
      - '#/definitions/systemProperties/properties/id'
      naturalKey:
      - '#/properties/program_id'
      - '#/properties/inputs/properties/submitter_read_group_id'
      references:
      - foreignKey:
        - '#/properties/program_id'
        - '#/properties/inputs/properties/submitter_read_group_id'
        targetEntity: 'read_group'
        targetKey:  # relationship by naturalKey
        - 'read_group#/definitions/systemProperties/properties/program_id'
        - 'read_group#/properties/submitter_read_group_id'
      - foreignKey:
        - '#/definitions/systemProperties/properties/read_group_id'
        targetEntity: 'read_group'
        targetKey:  # relationship by primaryKey
        - 'read_group#/definitions/systemProperties/properties/id'
  systemProperties:
    propertyNames:
      enum: [ schema_version, status, id, donor, read_group_id, library_strategy ]
    required: [ schema_version, status, id, donor, read_group_id, library_strategy ]
    properties:
      schema_version:
        $ref: '#/definitions/version'  # where to pick up the version
      status:
        $ref: _definitions#/common/properties/bundle_status
      id:
        $ref: _definitions#/common/properties/uuid
      donor:  # bioentity tree
        additionalProperties: false
        required: [ donor_id, specimen ]
        properties:
          donor_id:
            $ref: donor#/definitions/systemProperties/properties/id
          specimen:
            additionalProperties: false
            required: [ specimen_id, tumour_normal_designation, sample ]
            properties:
              specimen_id:
                $ref: specimen#/definitions/systemProperties/properties/id
              tumour_normal_designation:
                $ref: specimen#/properties/tumour_normal_designation
              sample:
                additionalProperties: false
                required: [ sample_id ]
                properties:
                  sample_id:  # to be magically populated by the system through traversing back to the 'sample'
                    $ref: sample#/definitions/systemProperties/properties/id
      read_group_id:  # FK points to PK of read_group
        $ref: read_group#/definitions/systemProperties/properties/id
      library_strategy:  # to be magically populated by the system through traversing back to the 'sequencing_experiment'
        $ref: sequencing_experiment#/properties/library_strategy

propertyNames:
  enum: [ type, program_id, inputs, analysis, files ]

required:
- type
- program_id
- inputs
- files

properties:
  type:
    const: "lane_seq_submission"
  program_id:
    $ref: _definitions#/common/properties/program_id
  inputs:
    additionalProperties: false
    required: [ submitter_read_group_id, files ]
    properties:
      submitter_read_group_id:
        $ref: _definitions#/common/properties/submitter_id
      files:
        additionalProperties: false
        oneOf:  # allows only bam or fastq submission
        - required: [ bam ]
        - required: [ fastq ]
        properties:
          bam:
            propertyNames:
              enum: [ name, path, size, checksum, checksum_type ]
            required: [ name, path, size, checksum, checksum_type ]
            allOf:
            - $ref: _definitions#/submitted_file
            - properties:
                name:
                  pattern: '\.bam$'  # must have .bam extension
          fastq:
            type: array
            minItems: 1
            maxItems: 2
            items:
              propertyNames:
                enum: [ name, path, size, checksum, checksum_type ]
              required: [ name, path, size, checksum, checksum_type ]
              allOf:
              - $ref: _definitions#/submitted_file
              - properties:
                  name:
                    pattern: '\.(fq|fastq)\.gz$'  # must have .fq or .fastq extension
  analysis:
    additionalProperties: false
    properties:
      analysis_type:
        allOf:
        - $ref: '_definitions#/analysis/properties/analysis_type'
        - const: 'Data submission'
      tool:  # Tool refers to what's in GA4GH's Tool Registry Service
        propertyNames:
          $ref: '_definitions#/analysis/properties/tool/toolNames/propertyNames'
        allOf:
        - $ref: '_definitions#/analysis/properties/tool'
        - properties:
            contained_apps:
              type: array
              items:
                type: string
              const: [ picard, samtool ]
      execution:
        $ref: '_definitions#/analysis/properties/execution'
  files:
    type: object
    additionalProperties: false
    properties:
      bam_file:
        $ref: lane_seq_submission.bam_file.data_object
        definitions:
          relationDef:
            $ref: '_definitions#/_/properties/relationDef'
            const:
              references:
              - foreignKey:
                - '#/properties/files/properties/bam_file/definitions/systemProperties/properties/object_id'
                targetEntity: 'data_object'  # lane_seq_qc to lane_seq_submission relationship is one-to-one
                targetKey:  # relationship by primaryKey
                - 'lane_seq_submission.bam_file.data_object#/definitions/systemProperties/allOf/1/properties/id'

          systemProperties:
            propertyNames:
              enum: [ type, object_id ]
            required: [ type, object_id ]
            properties:
              type:
                const: data_object
              object_id:
                $ref: lane_seq_submission.bam_file.data_object#/definitions/systemProperties/allOf/1/properties/id

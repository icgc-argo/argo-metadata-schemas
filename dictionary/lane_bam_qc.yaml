$schema: "http://dcc.icgc-argo.org/draft-00/schema#"

$id: "lane_bam_qc"
title: Unaligned lane level sequencing reads QC report
version: 0
category: data_bundle
type: object
description: ""
additionalProperties: false

systemProperties: [ id, status ]

required:
- type
- program
- read_group_submitter_id
- lane_bam_submission_id

primaryKey:
  surrogateKey: [ id ]

uniqueKeys:
- [ lane_bam_submission_id ]  # one lane bam can have only one lane_bam_qc record

references:
- selfKey: [ lane_bam_submission_id ]
  reference:
    targetEntity: lane_bam_submission  # lane_bam_qc to lane_bam_submission relationship is one-to-one
    targetKey: [ id ]

properties:
  type:
    const: "lane_bam_qc"
  id:
    $ref: _definitions#/common/properties/uuid
  status:
    $ref: _definitions#/common/properties/bundle_status
  program:
    $ref: _definitions#/common/properties/program_short_name
  lane_bam_submission_id:  # one lane_bam_submission per lane_bam_qc
    type: string
  analysis:
    type: object
    properties:
      analysis_type:
        const: 'QC'
      core_tool:
        const: 'Picard'
      tool:  # Tool refers to what's in GA4GH's Tool Registry Service
        type: object
        properties:
          registry:
            type: string  # such as Dockstore
          tool_id:
            type: string
          tool_name:
            type: string
          version:
            type: string
      execution:
        type: object
        properties:
          runner_name:
            type: string
          runner_version:
            type: string
          job_id:
            type: string
          started_at:
            type: string
            format: date-time
          completed_at:
            type: string
            format: date-time
  qc_metrics:
    type: object
    properties:
      PF_BASES:  # pass filter bases
        type: integer
      PF_READS:  # pass filter reads
        type: integer
      TOTAL_BASES:  # total bases
        type: integer
      TOTAL_READS:  # total reads
        type: integer
  input_files:  # input file for this QC tool could be locally prepared from preprocessing steps
    type: object
    properties:
      lane_bam:
        type: object
        references:
        - selfKey: [ bundle_id, object_id ]
          targetEntity: data_object
          targetKey: [ bundle_id, id ]
        properties:
          object_uri:  # if file is local, object_id will be 'null'
            type: string  # pattern: song://<repository>/<bundle_id>/<object_id>
          bundle_id:  # lane_bam_submission
            type: string
          object_id:  # lane_bam object ID in the above lane_bam_submission
            type: string
          name:  # file name
            type: string
          repository:  # repo where the object resides
            type: string
  files:
    properties:
      metrics_file:
        $id: data_object
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/data_object
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Read Group QC Metrics"

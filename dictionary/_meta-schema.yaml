"$schema": "http://dcc.icgc-argo.org/draft-00/schema#"
"$id": "http://dcc.icgc-argo.org/draft-00/schema#"
title: ICGC ARGO schema meta-schema
definitions:
  schemaArray:
    type: array
    minItems: 1
    items:
      "$ref": "#"
  nonNegativeInteger:
    type: integer
    minimum: 0
  nonNegativeIntegerDefault0:
    allOf:
    - "$ref": "#/definitions/nonNegativeInteger"
    - default: 0
  simpleTypes:
    enum:
    - array
    - boolean
    - integer
    - 'null'
    - number
    - object
    - string
  stringArray:
    type: array
    items:
      type: string
    uniqueItems: true
    default: []
  stringArrayNonEmpty:
    type: array
    items:
      type: string
    uniqueItems: true
    minItems: 1
type:
- object
- boolean
properties:
  "$id":
    type: string
    format: uri-reference
  "$schema":
    type: string
    format: uri
  "$ref":
    type: string
    format: uri-reference
  "$comment":
    type: string
  title:
    type: string
  description:
    type: string
  version:
    "$ref": "#/definitions/nonNegativeIntegerDefault0"
  category:
    enum:
    - clinical
    - biospecimen
    - data_bundle
  systemProperties:
    "$ref": "#/definitions/stringArray"
  uniqueKeys:
    type: array
    items:
      "$ref": "#/definitions/stringArray"
  scriptValidations:
    type: array
    items:
      type: string
      pattern: "^\$[_a-zA-Z]+[_a-zA-Z0-9]*\(.+\)$"
    uniqueItems: true
    default: []
  references:
    type: array
    items:
      type: object
      required: [ selfKey, reference ]
      properties:
        selfKey:
          "$ref": "#/definitions/stringArrayNonEmpty"
        reference:
          type: object
          required: [ targetEntity, targetKey ]
          properties:
            targetEntity:
              type: string
            targetKey:
              "$ref": "#/definitions/stringArrayNonEmpty"
  default: true
  readOnly:
    type: boolean
    default: false
  examples:
    type: array
    items: true
  multipleOf:
    type: number
    exclusiveMinimum: 0
  maximum:
    type: number
  exclusiveMaximum:
    type: number
  minimum:
    type: number
  exclusiveMinimum:
    type: number
  maxLength:
    "$ref": "#/definitions/nonNegativeInteger"
  minLength:
    "$ref": "#/definitions/nonNegativeIntegerDefault0"
  pattern:
    type: string
    format: regex
  additionalItems:
    "$ref": "#"
  items:
    anyOf:
    - "$ref": "#"
    - "$ref": "#/definitions/schemaArray"
    default: true
  maxItems:
    "$ref": "#/definitions/nonNegativeInteger"
  minItems:
    "$ref": "#/definitions/nonNegativeIntegerDefault0"
  uniqueItems:
    type: boolean
    default: false
  contains:
    "$ref": "#"
  maxProperties:
    "$ref": "#/definitions/nonNegativeInteger"
  minProperties:
    "$ref": "#/definitions/nonNegativeIntegerDefault0"
  required:
    "$ref": "#/definitions/stringArray"
  additionalProperties:
    "$ref": "#"
  definitions:
    type: object
    additionalProperties:
      "$ref": "#"
    default: {}
  properties:
    type: object
    additionalProperties:
      "$ref": "#"
    default: {}
  patternProperties:
    type: object
    additionalProperties:
      "$ref": "#"
    propertyNames:
      format: regex
    default: {}
  dependencies:
    type: object
    additionalProperties:
      anyOf:
      - "$ref": "#"
      - "$ref": "#/definitions/stringArray"
  propertyNames:
    "$ref": "#"
  const: true
  enum:
    type: array
    items: true
    minItems: 1
    uniqueItems: true
  type:
    anyOf:
    - "$ref": "#/definitions/simpleTypes"
    - type: array
      items:
        "$ref": "#/definitions/simpleTypes"
      minItems: 1
      uniqueItems: true
  format:
    type: string
  contentMediaType:
    type: string
  contentEncoding:
    type: string
  if:
    "$ref": "#"
  then:
    "$ref": "#"
  else:
    "$ref": "#"
  allOf:
    "$ref": "#/definitions/schemaArray"
  anyOf:
    "$ref": "#/definitions/schemaArray"
  oneOf:
    "$ref": "#/definitions/schemaArray"
  not:
    "$ref": "#"
default: true

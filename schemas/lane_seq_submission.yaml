$schema: "http://json-schema.org/draft-07/schema#"

$id: "lane_seq_submission"
title: Lane level sequence submission bundle, one read group one lane_seq_submission
type: object
description: ""

definitions:
  version:
    $ref: '_definitions#/_/properties/version'
    const: 0
  relationDef:
    $ref: '_definitions#/_/properties/relationDef'
    const:
      primaryKey:
      - '#/definitions/systemProperties/properties/id'
      naturalKey:
      - '#/properties/program'
      - '#/properties/inputs/properties/read_group_submitter_id'
      references:
      - foreignKey:
        - '#/properties/program'
        - '#/properties/inputs/properties/read_group_submitter_id'
        targetEntity: 'read_group'
        targetKey:  # relationship by naturalKey
        - 'read_group#/definitions/systemProperties/properties/program'
        - 'read_group#/properties/submitter_id'
      - foreignKey:
        - '#/definitions/systemProperties/properties/read_group_id'
        targetEntity: 'read_group'
        targetKey:  # relationship by primaryKey
        - 'read_group#/definitions/systemProperties/properties/id'
  systemProperties:
    propertyNames:
      enum: [ status, id, donor, read_group_id, library_strategy ]
    required: [ status, id, donor, read_group_id, library_strategy ]
    properties:
      status:
        $ref: _definitions#/common/properties/bundle_status
      id:
        $ref: _definitions#/common/properties/uuid
      donor:  # bioentity tree
        additionalProperties: false
        properties:
          donor_id:
            $ref: donor#/definitions/systemProperties/properties/id
          specimen:
            additionalProperties: false
            properties:
              specimen_id:
                $ref: specimen#/definitions/systemProperties/properties/id
              sample:
                additionalProperties: false
                properties:
                  sample_id:  # to be magically populated by the system through traversing back to the 'sample'
                    $ref: sample#/definitions/systemProperties/properties/id
      read_group_id:  # FK points to PK of read_group
        $ref: read_group#/definitions/systemProperties/properties/id
      library_strategy:  # to be magically populated by the system through traversing back to the 'sequencing_experiment'
        $ref: sequencing_experiment#/properties/library_strategy

propertyNames:
  enum: [ type, program, inputs, analysis, files ]

required:
- type
- program
- inputs
- files

properties:
  type:
    const: "lane_seq_submission"
  program:
    $ref: _definitions#/common/properties/program_short_name
  inputs:
    additionalProperties: false
    required: [ read_group_submitter_id, files ]
    properties:
      read_group_submitter_id:
        $ref: _definitions#/common/properties/submitter_id
      files:
        additionalProperties: false
        oneOf:  # allows only bam or fastq submission
        - required: [ bam ]
        - required: [ fastq ]
        properties:
          bam:
            propertyNames:
              enum: [ name, local_path, size, checksum, checksum_type ]
            required: [ name, local_path, size, checksum, checksum_type ]
            allOf:
            - $ref: _definitions#/submitted_file
            - properties:
                name:
                  pattern: '\.bam$'  # must have .bam extension
          fastq:
            type: array
            minItems: 1
            maxItems: 2
            items:
              propertyNames:
                enum: [ name, local_path, size, checksum, checksum_type ]
              required: [ name, local_path, size, checksum, checksum_type ]
              allOf:
              - $ref: _definitions#/submitted_file
              - properties:
                  name:
                    pattern: '\.(fq|fastq)\.gz$'  # must have .fq or .fastq extension
  analysis:
    additionalProperties: false
    properties:
      analysis_type:
        const: 'Data Submission'
      tool:  # Tool refers to what's in GA4GH's Tool Registry Service
        additionalProperties: false
        properties:
          registry:
            type: string  # such as Dockstore
          id:  # tool ID
            type: string
          name:  # tool name
            type: string
          version:
            type: string
          contained_apps:
            type: array
            items:
              type: string
            const: [ picard ]
      execution:
        additionalProperties: false
        properties:
          runner_name:
            type: string
          runner_version:
            type: string
          job_id:
            type: string
          started_at:
            type: string
            format: date-time
          completed_at:
            type: string
            format: date-time
  files:
    type: object
    additionalProperties: false
    properties:
      bam_file:
        $ref: lane_seq_submission.bam_file.data_object
        definitions:
          relationDef:
            $ref: '_definitions#/_/properties/relationDef'
            const:
              references:
              - foreignKey:
                - '#/properties/files/properties/bam_file/definitions/systemProperties/properties/object_id'
                targetEntity: 'data_object'  # lane_seq_qc to lane_seq_submission relationship is one-to-one
                targetKey:  # relationship by primaryKey
                - 'lane_seq_submission.bam_file.data_object#/definitions/systemProperties/allOf/1/properties/id'

          systemProperties:
            propertyNames:
              enum: [ type, object_id ]
            required: [ type, object_id ]
            properties:
              type:
                const: data_object
              object_id:
                $ref: lane_seq_qc.metrics_file.data_object#/definitions/systemProperties/allOf/1/properties/id

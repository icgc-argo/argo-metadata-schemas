$schema: "http://json-schema.org/draft-07/schema#"

$id: "lane_bam_qc"
title: Unaligned lane level sequencing reads QC report
type: object
description: ""
additionalProperties: false

definitions:
  relationDef:
    $ref: '_definitions#/relationDef'
    const:
      category: data_bundle
      version: 0
      primaryKey:
      - '#/definitions/systemProperties/properties/id'
      uniqueKey:
      - [ '#/properties/inputs/properties/lane_bam_submission_id' ]   # one lane bam can have only one lane_bam_qc record
      references:
      - foreignKey:
        - '#/properties/inputs/properties/lane_bam_submission_id'
        targetEntity: 'lane_bam_submission'  # lane_bam_qc to lane_bam_submission relationship is one-to-one
        targetKey:  # relationship by primaryKey
        - 'lane_bam_submission#/definitions/systemProperties/properties/id'

  systemProperties:
    properties:
      status:
        $ref: _definitions#/common/properties/bundle_status
      id:
        $ref: _definitions#/common/properties/uuid
      read_group_id:  # FK points to PK of read_group
        $ref: lane_bam_submission#/definitions/systemProperties/properties/read_group_id
      library_strategy:
        $ref: lane_bam_submission#/definitions/systemProperties/properties/library_strategy
      donor:
        $ref: lane_bam_submission#/definitions/systemProperties/properties/donor

required:
- type
- program
- inputs
- analysis
- qc_metrics
- input_files
- files

properties:
  type:
    const: "lane_bam_qc"
  program:
    $ref: _definitions#/common/properties/program_short_name
  inputs:
    properties:
      lane_bam_submission_id:  # one lane_bam_submission per lane_bam_qc
        $ref: lane_bam_submission#/definitions/systemProperties/properties/id
  analysis:
    type: object
    properties:
      analysis_type:
        const: 'QC'
      core_tool:
        const: 'Picard'
      tool:  # Tool refers to what's in GA4GH's Tool Registry Service
        type: object
        properties:
          registry:
            type: string  # such as Dockstore
          tool_id:
            type: string
          tool_name:
            type: string
          version:
            type: string
      execution:
        type: object
        properties:
          runner_name:
            type: string
          runner_version:
            type: string
          job_id:
            type: string
          started_at:
            type: string
            format: date-time
          completed_at:
            type: string
            format: date-time
  qc_metrics:
    type: object
    properties:
      pf_bases:
        description: "pass filter bases"
        type: integer
      pf_reads:
        description: "pass filter reads"
        type: integer
      total_bases:
        description: "total bases"
        type: integer
      total_reads:
        description: "total reads"
        type: integer
  input_files:  # input file for this QC tool could be locally prepared from preprocessing steps
    type: object
    properties:
      lane_bam:
        type: object
        properties:
          object_uri:  # if file is local, object_id will be 'null'
            type: string  # pattern: song://<repository>/<bundle_id>/<object_id>
          bundle_id:  # lane_bam_submission
            $ref: "#/properties/inputs/properties/lane_bam_submission_id"  # get value from
          object_id:  # lane_bam object ID in the above lane_bam_submission
            type: string
          name:  # file name
            pattern: '\.bam$'  # pattern to find input file from the bundle
          repository:  # repo where the object resides
            type: string
  files:
    type: object
    additionalProperties: false
    properties:
      metrics_file:
        $id: "#data_object/metrics_file"
        type: object

        definitions:
          relationDef:
            $ref: '_definitions#/relationDef'
            const:
              primaryKey:
              - '#/properties/files/properties/metrics_file/definitions/systemProperties/properties/id'

          systemProperties:
            required: [ id, program, repository, created_at, updated_at, derived_from, bundle_id, bundle_type, format, data_type ]
            allOf:
            - $ref: _definitions#/data_object
            - $ref: _definitions#/repositoryProperties
            - properties:
                id:  # surrogate key
                  $ref: _definitions#/data_object/properties/id
                program:  # copied from containing parent
                  $ref: "#/properties/program"
                donor:  # copied from containing parent
                  $ref: "#/definitions/systemProperties/properties/donor"
                derived_from:
                  type: object
                  properties:
                    type:
                      const: "read_group"
                    id:  # copied from containing parent
                      $ref: "#/definitions/systemProperties/properties/read_group_id"
                bundle_id:  # copied from containing parent
                  $ref: "#/definitions/systemProperties/properties/id"
                bundle_type:
                  const: "lane_bam_qc"
                format:
                  const: "TXT"
                  default: "TXT"
                date_type:
                  const: "RG QC"
                  default: "RG QC"

        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            name:
              pattern: '\.txt\.gz$'  # must have .txt.gz extension

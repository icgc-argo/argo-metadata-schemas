{
  "name": "sequencing_alignment",
  "schema": {
    "type": "object",
    "required": [
      "workflow",
      "experiment",
      "read_group_count",
      "read_groups"
    ],
    "properties": {
      "workflow": {
        "propertyNames": {
          "enum": [
            "workflow_name",
            "workflow_version",
            "genome_build",
            "run_id",
            "session_id",
            "inputs"
          ]
        },
        "required": [
          "workflow_name",
          "workflow_version",
          "genome_build",
          "run_id",
          "session_id",
          "inputs"
        ],
        "allOf": [
          {
            "type": "object",
            "properties": {
              "workflow_name": {
                "type": "string",
                "pattern": "^[a-zA-Z][a-zA-Z0-9 _\\-]+[a-zA-Z0-9]+$"
              },
              "genome_build": {
                "type": "string",
                "enum": ["GRCh38_hla_decoy_ebv"]
              },
              "inputs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "input_analysis_id": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"
                    },
                    "analysis_type": {
                      "type": "string",
                      "pattern": "^[a-zA-Z][a-zA-Z0-9_]+$"
                    }
                  }
                },
                "minItems": 1
              },
              "run_id": {
                "type": "string"
              },
              "session_id": {
                "type": "string"
              },
              "workflow_version": {
                "type": "string"
              }
            }
          },
          {
            "properties": {
              "inputs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "analysis_type": {
                      "enum": [
                        "sequencing_experiment",
                        "read_group_ubam"
                      ]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "experiment": {
        "propertyNames": {
          "enum": [
            "platform",
            "platform_model",
            "sequencing_date",
            "experimental_strategy",
            "sequencing_center",
            "submitter_sequencing_experiment_id"
          ]
        },
        "required": [
          "platform",
          "experimental_strategy"
        ],
        "type": "object",
        "properties": {
          "submitter_sequencing_experiment_id": {
            "type": ["string", "null"],
            "pattern": "^[a-zA-Z0-9]{1}[a-zA-Z0-9\\-_\\.:']{0,98}[a-zA-Z0-9]{1}$"
          },
          "platform": {
            "enum": [
              "CAPILLARY",
              "LS454",
              "ILLUMINA",
              "SOLID",
              "HELICOS",
              "IONTORRENT",
              "ONT",
              "PACBIO",
              "Nanopore",
              "BGI"
            ]
          },
          "platform_model": {
            "type": [
              "string",
              "null"
            ]
          },
          "sequencing_date": {
            "oneOf": [
              {
                "type": "string",
                "oneOf": [
                  {
                    "format": "date"
                  },
                  {
                    "format": "date-time"
                  }
                ],
                "example": [
                  "2019-06-16",
                  "2019-06-16T20:20:39+00:00"
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "experimental_strategy": {
            "enum": [
              "WGS",
              "WXS",
              "RNA-Seq",
              "Bisulfite-Seq",
              "ChIP-Seq"
            ]
          },
          "sequencing_center": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "read_group_count": {
        "type": "integer",
        "minimum": 1
      },
      "read_groups": {
        "type": "array",
        "items": {
          "type": "object",
          "minItems": 1,
          "propertyNames": {
            "enum": [
              "library_name",
              "platform_unit",
              "is_paired_end",
              "read_length_r1",
              "file_r1",
              "insert_size",
              "read_length_r2",
              "file_r2",
              "sample_barcode",
              "read_group_id_in_bam",
              "submitter_read_group_id"
            ]
          },
          "required": [
            "library_name",
            "platform_unit",
            "is_paired_end",
            "read_length_r1",
            "file_r1",
            "insert_size",
            "read_length_r2",
            "file_r2",
            "sample_barcode",
            "submitter_read_group_id"
          ],
          "allOf": [
            {
              "properties": {
                "submitter_read_group_id": {
                  "type": "string",
                  "pattern": "^[a-zA-Z0-9\\-_:\\.]+$"
                },
                "read_group_id_in_bam": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^[a-zA-Z0-9\\-_:\\.']+$"
                },
                "library_name": {
                  "type": "string"
                },
                "platform_unit": {
                  "type": "string"
                },
                "is_paired_end": {
                  "type": "boolean"
                },
                "file_r1": {
                  "type": "string"
                },
                "file_r2": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "read_length_r1": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 20
                },
                "read_length_r2": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 20
                },
                "insert_size": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "minimum": 0
                },
                "sample_barcode": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            {
              "if": {
                "properties": {
                  "is_paired_end": {
                    "const": true
                  }
                }
              },
              "then": {
                "properties": {
                  "file_r2": {
                    "type": "string"
                  },
                  "read_length_r2": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 20
                  },
                  "insert_size": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 0
                  }
                }
              },
              "else": {
                "properties": {
                  "file_r2": {
                    "const": null
                  },
                  "read_length_r2": {
                    "const": null
                  },
                  "insert_size": {
                    "const": null
                  }
                }
              }
            }
          ]
        }
      }
    }
  }
}

$schema: "http://dcc.icgc-argo.org/draft-00/schema#"

$id: "dna_uniform_alignment"
title: Uniform alignment of DNA sequencing reads
version: 0
category: data_bundle
type: object
description: ""
additionalProperties: false

systemProperties: [ id, status ]

required:
- type
- program
- lane_bam_submission_id

uniqueKeys:
- [ id ]
- [ program, lane_bam_submission_id ]

references:
- selfKey: [ program, lane_bam_submission_id ]
  reference:
    targetEntity: lane_bam_submission
    targetKey: [ program, id ]

properties:
  type:
    const: "dna_uniform_alignment"
  status:
    $ref: _definitions#/common/properties/bundle_status
  id:
    $ref: _definitions#/common/properties/id
  program:
    $ref: _definitions#/common/properties/program_short_name
  lane_bam_submission_id:
    type: array
    minItems: 1
    items:
      type: string
  analysis:
    type: object
    properties:
      analysis_type:
        const: 'DNA Alignment'
      reference_genome:
        enum: [ GRCh37, GRCh38 ]
      core_tool:
        const: 'BWA MEM'
      tool:  # Tool refers to what's in GA4GH's Tool Registry Service
        type: object
        properties:
          registry:
            type: string  # such as Dockstore
          tool_id:
            type: string
          tool_name:
            type: string
          version:
            type: string
      execution:
        type: object
        properties:
          runner_name:
            type: string
          runner_version:
            type: string
          job_id:
            type: string
          started_at:
            type: string
            format: date-time
          completed_at:
            type: string
            format: date-time
  qc_metrics:
    type: object  # more details to be fleshed out
  input_files:  # input files are multiple lane level unaligned bam files
    type: object
    properties:
      lane_bams:
        type: array
        minItems: 1  # at least one, must match number of read groups
        items:
          type: object
          properties:
            object_uri:  # if file is local, object_id will be 'null'
              type: string  # pattern: song://<repository>/<bundle_id>/<object_id>
            bundle_id:  # lane_bam_submission
              type: string
            object_id:  # lane_bam object ID in the above lane_bam_submission
              type: string
            name:  # file name
              type: string
            repository:  # repo where the object resides
              type: string
      reference_genome:
        type: object
        properties:
          reference_gz:
            type: object
            properties:
              object_uri:
                type: string
          reference_gz_fai:
            type: object
            properties:
              object_uri:
                type: string
          reference_gz_fai:
            type: object
            properties:
              object_uri:
                type: string
          reference_gz_bwt:
            type: object
            properties:
              object_uri:
                type: string
          reference_gz_ann:
            type: object
            properties:
              object_uri:
                type: string
          reference_gz_pac:
            type: object
            properties:
              object_uri:
                type: string
          reference_gz_sa:
            type: object
            properties:
              object_uri:
                type: string
          reference_gz_amb:
            type: object
            properties:
              object_uri:
                type: string
  files:
    type: object
    properties:
      aligned_seq:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              enum: [ "CRAM", "BAM" ]
            extension:
              enum: [ ".cram", ".bam" ]
            date_type:
              const: "Aligned Sequencing Reads"
      aligned_seq_index:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              enum: [ "CRAI", "BAI" ]
            extension:
              enum: [ ".cram.crai", ".bam.bai" ]
            date_type:
              const: "Aligned Sequencing Reads Index"
      quality_distribution:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              enum: [ "PDF" ]
            extension:
              enum: [ ".pdf.gz" ]
            date_type:
              const: "Alignment QC Plot"
      bait_bias_detail_metrics:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Alignment QC Metrics"
      quality_by_cycle:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Alignment QC Metrics"
      base_distribution_by_cycle_metrics:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Alignment QC Metrics"
      pre_adapter_summary_metrics:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Alignment QC Metrics"
      quality_by_cycle_metrics:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Alignment QC Metrics"
      insert_size_histogram:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              enum: [ "PDF" ]
            extension:
              enum: [ ".pdf.gz" ]
            date_type:
              const: "Alignment QC Plot"
      insert_size_metrics:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Alignment QC Metrics"
      quality_distribution_metrics:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Alignment QC Metrics"
      alignment_summary_metrics:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Alignment QC Metrics"
      error_summary_metrics:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Alignment QC Metrics"
      base_distribution_by_cycle:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              enum: [ "PDF" ]
            extension:
              enum: [ ".pdf.gz" ]
            date_type:
              const: "Alignment QC Plot"
      pre_adapter_detail_metrics:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Alignment QC Metrics"
      bait_bias_summary_metrics:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Alignment QC Metrics"
      quality_yield_metrics:
        type: object
        systemProperties: [ id, bundle_id, format, extension, date_type ]
        allOf:
        - $ref: _definitions#/submitted_file
        - properties:
            format:
              const: "TXT"
            extension:
              const: ".txt.gz"
            date_type:
              const: "Alignment QC Metrics"
